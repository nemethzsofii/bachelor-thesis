@page
@model WebApplication1.Pages.Finance.IndexModel
@{
	ViewData["Title"] = "Finances";
}
<style>
	.centered {
		max-width: fit-content;
		margin-inline: auto;
	}
</style>

<input id="current-user-id" type="hidden" value="@Model.UserData.Id" />

<div id="index-container" class="container mt-4">
    <ul class="nav nav-tabs" id="index-tab" role="tablist">
        <li class="nav-item">
            <a class="nav-link active" id="transactions-tab" data-toggle="tab" href="#trans-content" role="tab" aria-controls="trans-content" aria-selected="true">Transactions</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="batch-tab" data-toggle="tab" href="#batch-content" role="tab" aria-controls="batch-content" aria-selected="false">Batch Upload</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="spendings-tab" data-toggle="tab" href="#spend-content" role="tab" aria-controls="spend-content" aria-selected="false">Spending Limit</a>
        </li>
    </ul>

    <div class="tab-content" id="index-tab-content">
        <!-- Transactions Tab -->
        <div class="tab-pane fade show active" id="trans-content" role="tabpanel" aria-labelledby="transactions-tab" style="padding: 15px">
            <div class="row">
                <!-- Income -->
                <div class="col">
                    <div class="input-card income-card">
                        <div class="card border-left-success shadow h-100 py-2">
                            <div class="card-body">
                                <div class="row no-gutters align-items-center">
                                    <div class="col mr-2">
                                        <div class="text-xs font-weight-bold text-success text-uppercase mb-1">INCOME</div>
                                        <div class="h5 mb-0 font-weight-bold text-gray-400">New Income Entry</div>
                                    </div>
                                    <div class="col-auto">
                                        <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                                    </div>
                                    <div class="col-auto" style="margin-left: 10px">
                                        <button class="add-btn btn btn-success" id="add-income-btn">Add</button>
                                    </div>
                                </div>

                                <div id="income-input-div" class="input-container" style="display: none; margin-top: 13px">
                                    <table style="padding: 3px">
                                        <tr>
                                            <td><label for="income-amount-input-field">Amount:</label></td>
                                            <td><input class="input-amount" id="income-amount-input-field" name="income-amount-input-field" type="number" /></td>
                                        </tr>
                                        <tr>
                                            <td><label for="income-desc-input-field">Description:</label></td>
                                            <td><input class="input-desc" id="income-desc-input-field" name="income-desc-input-field" type="text" /></td>
                                        </tr>
                                    </table>
                                    <div class="categoryIncomeDropdownContainer"></div>
                                    <button class="btn save-btn">SAVE</button>
                                    <button class="btn cancel-btn">CANCEL</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Expense -->
                <div class="col">
                    <div class="input-card expense-card">
                        <div class="card border-left-info shadow h-100 py-2">
                            <div class="card-body">
                                <div class="row no-gutters align-items-center">
                                    <div class="col mr-2">
                                        <div class="text-xs font-weight-bold text-info text-uppercase mb-1">EXPENSE</div>
                                        <div class="h5 mb-0 font-weight-bold text-gray-400">New Expense Entry</div>
                                    </div>
                                    <div class="col-auto">
                                        <i class="fas fa-clipboard-list fa-2x text-gray-300"></i>
                                    </div>
                                    <div class="col-auto" style="margin-left: 10px">
                                        <button class="add-btn btn btn-info" id="add-expense-btn">Add</button>
                                    </div>
                                </div>

                                <div id="expense-input-div" class="input-container" style="display: none; margin-top: 13px">
                                    <table style="padding: 3px">
                                        <tr>
                                            <td><label for="expense-amount-input-field">Amount:</label></td>
                                            <td><input class="input-amount" id="expense-amount-input-field" name="expense-amount-input-field" type="number" /></td>
                                        </tr>
                                        <tr>
                                            <td><label for="expense-desc-input-field">Description:</label></td>
                                            <td><input class="input-desc" id="expense-desc-input-field" name="expense-desc-input-field" type="text" /></td>
                                        </tr>
                                    </table>
                                    <div class="categoryExpenseDropdownContainer"></div>
                                    <button class="btn save-btn">SAVE</button>
                                    <button class="btn cancel-btn">CANCEL</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Transactions Table -->
            <div class="row justify-content-center">
                <div class="col-lg-10" style="padding: 30px">
                    <div class="card border-2 rounded-4 shadow-sm" style="border-color: #36b9cc;">
                        <div class="card-header text-white rounded-top-4" style="background: linear-gradient(135deg, #4e73df, #1cc88a);">
                            <h5 class="mb-2 fw-bold text-center">Transactions Table</h5>
                            <p class="text-white-50 text-center mb-1">Track your income and expenses here.</p>
                        </div>

                        <div class="card-body bg-white rounded-bottom-4">
                            <table id="finance-table" class="table table-hover align-middle">
                                <thead class="table-primary">
                                    <tr>
                                        <th>Type</th>
                                        <th>Category</th>
                                        <th>Description</th>
                                        <th>Amount</th>
                                        <th>Date</th>
                                    </tr>
                                </thead>
                                <tbody id="tbody">
                                    <!-- Dynamic rows go here -->
                                </tbody>
                                <tfoot class="table-light">
                                    <tr>
                                        <th>Type</th>
                                        <th>Category</th>
                                        <th>Description</th>
                                        <th>Amount</th>
                                        <th>Date</th>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Batch Upload Tab -->
        <div class="tab-pane fade" id="batch-content" role="tabpanel" aria-labelledby="batch-tab" style="padding: 15px">
            <div class="row justify-content-center">
                <div class="col-md-7">
                    <div class="card shadow-sm">
                        <div class="card-header bg-primary text-white">
                            <h5 class="mb-0">Upload Data (CSV)</h5>
                        </div>
                        <div class="card-body">
                            <p>Upload a CSV file with the following row format:</p>
                            <ul class="mb-3">
                                <li>[type (1 = income, 2 = expense), category (or "-" if none), description, amount (positive integer), date (YYYY-MM-DD)]</li>
                                <li>Example: <code>[2, family, dinner with parents, 10500, 2024-10-23]</code></li>
                            </ul>
                            <form id="csv-upload-form" style="display: flex; flex-direction: column; gap: 10px;">
                                <input type="file" id="csv-file" class="form-control" accept=".csv" required>
                                <button type="submit" id="upload-csv" class="btn btn-primary" style="width: 20%;">Upload</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Spending Limits Tab -->
        <div class="tab-pane fade" id="spend-content" role="tabpanel" aria-labelledby="spendings-tab" style="padding: 15px">
            <div class="row">
                <div class="col">
                    <div class="input-card spending-card">
                        <div class="card border-left-warning shadow h-100 py-2">
                            <div class="card-body">
                                <div class="row no-gutters align-items-center">
                                    <div class="col mr-2">
                                        <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">Spending Limit</div>
                                        <div class="h5 mb-0 font-weight-bold text-gray-400">monthly</div>
                                        <div style="display: flex; flex-direction: row">
                                            <div class="h5 mb-0 font-weight-bold text-gray-800" id="spending-limit-text">0</div>
                                            <div class="h5 mb-0 font-weight-bold text-gray-800" id="spending-limit-text">
                                                &nbsp;
                                                Ft
                                            </div>
                                        </div>
                                        
                                    </div>
                                    <div class="col-auto">
                                        <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                                    </div>
                                    <div class="col-auto" style="margin-left: 10px">
                                        <button class="add-btn btn btn-warning" id="add-income-btn">Change</button>
                                    </div>
                                </div>

                                <div id="spending-input-div" class="input-container" style="display: none; margin-top: 13px">
                                    <table style="padding: 3px">
                                        <tr>
                                            <td><label for="spending-limit-input-field">Amount:</label></td>
                                            <td><input class="input-amount" id="spending-limit-input-field" name="spending-limit-input-field" type="number" /></td>
                                        </tr>
                                    </table>
                                    <button class="btn save-btn">SAVE</button>
                                    <button class="btn cancel-btn">CANCEL</button>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="col">
                    <canvas id="monthly-spending-pie-chart" width="300" height="300"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/js/add-income-expense.js" asp-append-version="true"></script>
<script src="~/js/utils.js" asp-append-version="true"></script>
<script src="~/js/monthly-spending.js" asp-append-version="true"></script>
<script defer>
	document.addEventListener("DOMContentLoaded", async function () {
			populateCategoryDropdown(1, "categoryIncomeDropdownContainer");
			populateCategoryDropdown(2, "categoryExpenseDropdownContainer");
			var currentUserId = parseInt(document.getElementById("current-user-id").value, 10);

            //display monthly spending limit
            try{
                var limit = await getMonthlySpendingLimit(currentUserId);
                document.getElementById("spending-limit-text").textContent = limit;
            }catch(err){
                console.log(err);
            }


                var table = new DataTable('#finance-table', {
                  columnDefs: [
                    {
                      targets: 0, // hide the first (id) column from the user
                      visible: false,
                      searchable: false
                    }
                  ],
                  columns: [
                    { title: "Id" },
                    { title: "Type" },
                    { title: "Category" },
                    { title: "Description" },
                    {
                      title: "Amount",
                      className: "text-end",
                      render: function (data, type, row) {
                        const num = Number(data);
                        if (type === 'display' || type === 'filter') {
                          return `${num.toLocaleString('hu-HU')} Ft`;
                        }
                        return num;
                      }
                    },
                    { title: "Date" },
                    {
                        title: "Delete",
                        orderable: false,
                        searchable: false,
                        className: "text-center",
                        render: function (data, type, row, meta) {
                        return `<button class="btn btn-sm btn-danger delete-btn">🗑</button>`;
                        }
                    }

                  ]
                });

			async function createHistoryTable(divId){
				var result = await listAllTransactions(currentUserId);
				if(!result || result.length === 0) {
						throw new Error("No transactions found.");
					}

					console.log("Creating finance table with: ", result);

					var container = document.getElementById(divId);
					var tbody = document.getElementById("tbody");
					if(tbody != null){
						console.log("tbody found");
					}
					for(let i = 0; i < result.length; i ++){

					const typeId = result[i].typeId;
					const isExpense = typeId == 2;
					
					if(result[i].categoryId != null){
						var res = await getCategoryById(result[i].categoryId);
						var categoryName = res.name.toLowerCase();
					}else{
						var categoryName = "-";
					}
					
					const rowNode = table.row.add([
                        result[i].id,
						`${isExpense ? '⬇️ expense' : '⬆️ income'}`,
						`${categoryName}`,
						`${result[i].description}`,
						`${result[i].amount}`,
						`${result[i].date}`
					]).draw(false).node();
					}
			}


			// MAIN
			createHistoryTable("finance-table");

            // handle transactions deletion
            $('#finance-table tbody').on('click', '.delete-btn', function () {
                const row = table.row($(this).closest('tr'));
                const data = row.data();
                const id = data[0]; // the first col: hidden id

                fetch(`/api/Transaction/${id}`, {
                method: 'DELETE'
                })
                .then(response => {
                if (!response.ok) {
                    throw new Error("Failed to delete entry");
                }
                row.remove().draw(false);
                })
                .catch(error => {
                displayBasicModak("Error deleting entry!", "error");
                });
            });

            document.getElementById("csv-upload-form").addEventListener("submit", async function (e) {
                e.preventDefault();

                const fileInput = document.getElementById("csv-file");
                const uploadButton = document.getElementById("upload-csv");
                const file = fileInput.files[0];

                if (!file) {
                    displayModal("Please select a file.", "error");
                    return;
                }

                const formData = new FormData();
                formData.append("file", file);

                const originalButtonText = uploadButton.innerHTML;

                try {
                    uploadButton.disabled = true;
                    uploadButton.innerHTML = `
                        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Uploading...
                    `;

                    const response = await fetch("/api/Transaction/csv", {
                        method: "POST",
                        body: formData
                    });

                    if (response.ok) {
                        displayBasicModal("Transactions saved!", "success");
                    } else {
                        const errorMessage = await response.text();
                        if(errorMessage.length > 300){
                            displayBasicModal("An unexpected error occurred!", "error");
                        }else{
                            displayBasicModal(errorMessage, "error");
                        }
                        
                    }
                } catch (error) {
                    displayBasicModal("An unexpected error occurred: " + error.message, "error");
                } finally {
                    uploadButton.disabled = false;
                    uploadButton.innerHTML = originalButtonText;
                }
            });

	});
</script>