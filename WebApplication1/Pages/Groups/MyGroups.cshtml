@page
@model WebApplication1.Pages.Groups.MyGroupsModel
@{
	ViewData["Title"] = "My Groups";
}
<input id="current-user-id" type="hidden" value="@Model.UserData.Id" />

<div id="groups-container">
	<ul class="nav nav-tabs" id="groups-tab" role="tablist">
	</ul>
	<div class="tab-content" id="groups-tab-content">

	</div>
</div>

<!-- Savings Delete Modal -->
<div class="modal fade" id="savingsDeleteModal" tabindex="-1" role="dialog" aria-labelledby="savingsModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered" role="document">
		<div class="modal-content rounded-3 shadow">

			<div class="modal-header bg-danger text-white">
				<h5 class="modal-title" id="savingsModalLabel">Are you sure you want to delete saving?</h5>
				<button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>

			<div class="modal-body">
				<h7>This action cannot be undone.</h7>

				<!-- modal.onShow jquery function will fill this value with the deletable saving's id-->
				<input type="hidden" class="modal-hidden-saving-id" value="" />
			</div>

			<div class="modal-footer">
				<button type="button" id="savings-delete-button" class="btn btn-danger">Delete</button>
				<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
			</div>

		</div>
	</div>
</div>

<script src="~/js/add-income-expense.js" asp-append-version="true"></script>
<script src="~/js/savings.js" asp-append-version="true"></script>
<script src="~/js/utils.js" asp-append-version="true"></script>
<script>
	document.addEventListener("DOMContentLoaded", function () {
		(async () => {
			const toggleBtns = document.querySelectorAll(".toggle-group-members");

			toggleBtns.forEach(btn => {
				btn.addEventListener("click", function () {
					const wrapper = this.closest(".group-container").querySelector(".group-members-wrapper");

					const isVisible = wrapper.style.display === "block";
					wrapper.style.display = isVisible ? "none" : "block";
					this.textContent = isVisible ? "Show Group Members" : "Hide Group Members";
				});
			});
		  try {
			var userId = await getCurrentUserId();
			var result = await getGroupsForCurrentUser();
			await displayGroups(result);
			for(let i=0; i < result.length; i++){
				createHistoryTable(result[i].groupId);
			}

			document.querySelectorAll(".delete-form").forEach(form => {
				form.addEventListener("submit", async function(e) {
					e.preventDefault();

					const groupId = form.id.split('-')[2];
					const modal = document.getElementById(`deleteModal-${groupId}`);
					const status = await deleteGroup(groupId);
					if (status === 200 || status === 204) {
						$(modal).modal('hide');

						location.reload();
					}
				})
			});

			document.querySelectorAll(".invite-form").forEach(form => {
			  form.addEventListener("submit", async function (e) {
				e.preventDefault();

				const groupId = form.id.split('-')[2];
				const userName = form.querySelector(".username-input").value;
				const resultMessage = form.querySelector(".result-message");

				const user = await getUserByUsername(userName);

				if (user) {
				  const receiverUserId = user["id"];
				  const statusCode = await postInvite(parseInt(groupId), userId, receiverUserId);

				  if (statusCode === 409) {
					resultMessage.textContent = "Invite already exists!";
					resultMessage.classList.add("text-danger");
					resultMessage.classList.remove("text-success");
				  } else if (statusCode === 400) {
					resultMessage.textContent = "Bad request!";
					resultMessage.classList.add("text-danger");
					resultMessage.classList.remove("text-success");
				  } else {
					resultMessage.textContent = "Invite sent successfully!";
					form.querySelector(".username-input").value = "";
					resultMessage.classList.add("text-success");
					resultMessage.classList.remove("text-danger");
				  }
				} else {
				  resultMessage.textContent = "Username not found!";
				  resultMessage.classList.add("text-danger");
				  resultMessage.classList.remove("text-success");
				}
			  });
			});

			$('.modal').on('hidden.bs.modal', function () {
			  const modalEl = this;

			  const resultMessage = modalEl.querySelector(".result-message");
			  if (resultMessage) {
				resultMessage.textContent = "";
				resultMessage.classList.remove("text-danger", "text-success");
			  }

			  const input = modalEl.querySelector(".username-input");
			  if (input) {
				input.value = "";
			  }
			});

		  } catch (error) {
			console.error('Error:', error);
		  }

		  const sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));
		await sleep(1000); //wait
		populateCategoryDropdown(1, "categoryIncomeDropdownContainer");
		populateCategoryDropdown(2, "categoryExpenseDropdownContainer");
		document.addEventListener("click", async function (e) {
			if (e.target.classList.contains("leave-btn")) {
				const id = e.target.getAttribute("data-id");
				const response = await fetch(`/api/GroupMembership/${id}`, {
					method: "DELETE",
					credentials: "include"
				});

				if (response.ok) {
					displayBasicModal("You have left the group.", "success");
					location.reload();
				} else {
					displayBasicModal("Failed to leave group.", "error");
				}
			}
		});

		})();

		async function createHistoryTable(groupId){
			var table = new DataTable(`#finance-table-${groupId}`, {
				columnDefs: [
					{
					  targets: 0, // hide the first (id) column
					  visible: false,
					  searchable: false
					}
				],
				columns: [
				{ title: "Id" },
				{ title: "User" },
				{ title: "Type" },
				{ title: "Category" },
				{ title: "Description" },
				{
					title: "Amount",
					className: "text-end",
					render: function (data, type, row) {
					const num = Number(data);
					if (type === 'display' || type === 'filter') {
						return `${num.toLocaleString('hu-HU')} Ft`;
					}
					return num;
					}
				},
				{ title: "Date" },
				{
					title: "Delete",
					orderable: false,
					searchable: false,
					className: "text-center",
					render: function (data, type, row, meta) {
					return `<button class="btn btn-sm btn-danger delete-btn">🗑</button>`;
					}
				}
				]
			});

			var result = await listAllTransactions(null, null, groupId);
			if(!result || result.length === 0) {
				console.log("No transactions found for " + groupId);
				return;
			}
			console.log(`#finance-table-${groupId}`);
			console.log("Creating finance table with: ", result);
			
			for(let i = 0; i < result.length; i ++){
				console.log("Creating element");
				var fullName = "-"
				try{
					const user = await getUserById(result[i].userId);
					fullName =  user.fullname;
					console.log(fullName);
					console.log(user);
				}catch(error){
					console.error("fullName not found.");
				}
				
				const typeId = result[i].typeId;
				const isExpense = typeId == 2;

				try{
					var category = await getCategoryById(result[i].categoryId);
				var categoryName = category["name"].toLowerCase();

				console.log(category);
				}catch(err){
					var categoryName = "-";
				}
				
				console.log(table);
				const rowNode = table.row.add([
					result[i].id,
					`${fullName}`,
					`${isExpense ? '⬇️ expense' : '⬆️ income'}`,
					`${categoryName}`,
					`${result[i].description}`,
					`${result[i].amount}`,
					`${result[i].date}`
				]).draw(false).node();
				console.log("Added node");
				//$(rowNode).css('background-color', isExpense ? '#ffe5e5' : '#e5ffe5');
				//$(rowNode).css('color', isExpense ? '#a10000' : '#007f00');

			}

			$(`#finance-table-${groupId} tbody`).on('click', '.delete-btn', async function () {
				console.log("EVENTLISTENER");

				const row = table.row($(this).closest('tr'));
				const data = row.data();
				const id = data[0]; // hidden id

				fetch(`/api/Transaction/${id}`, {
					method: 'DELETE'
				})
				.then(response => {
					if (!response.ok) {
						throw new Error("Failed to delete entry");
					}
					row.remove().draw(false);
				})
				.catch(error => {
					displayBasicModal("Error deleting entry!", "error");
				});
			});

		}

		async function populateGroupMembersDiv(groupId){
			var res = await fetchGroupMembers(groupId);
			var members = [];

			console.log(res);

			for (const member of res) {
				var user = await getUserById(member.userId);
				var fullName = user.fullname;
				members.push(fullName);

			}
			return members;
		}
		async function displayGroups(result){
			var containerDiv = document.getElementById("groups-container");
			var groupsTab = document.getElementById("groups-tab");
			var groupsContent = document.getElementById("groups-tab-content");

			console.log(result);
			if (result.length == 0){
				containerDiv.innerHTML = `
					<div class="card text-center shadow-sm border-0" style="max-width: 500px; margin: auto;">
					  <div class="card-header bg-white border-bottom-0">
						<h4 class="fw-bold">My Groups</h4>
					  </div>
					  <div class="card-body">
						<img src="https://cdn-icons-png.flaticon.com/512/615/615075.png" alt="No groups" width="120" class="mb-3" />
						<h5 class="card-title text-muted">You don't have any groups yet.</h5>
						<p class="card-text">Groups help you manage shared expenses and collaborate with others.</p>
						<a href="/Groups/Index" class="btn btn-primary mt-2">+ Create Group</a>
					  </div>
					</div>
				`;
				console.log("no groups");
			}else{
				console.log("groups found");
				for(let i=0; i < result.length; i++){
					
					var group = await getGroupById(result[i].groupId);
					var role = await getRoleById(result[i].roleId);

					var members = await populateGroupMembersDiv(group.id);
					console.log(members);
					var membersText =  members.join(", ");
					var savingsResult = await getGroupSavings(result[i].groupId);
					console.log("hmmmmmmm");
					console.log(membersText);

					groupsTab.innerHTML += `
					<li class="nav-item">
					<a class="nav-link ${i == 0 ? 'active' : ''}" id="${i}-tab" data-toggle="tab" href="#content${i}" role="tab" aria-controls="content${i}" aria-selected="true">${group.name}</a>
					</li>
					`

					groupsContent.innerHTML +=
					`
					<div class="tab-pane fade show ${i == 0 ? 'active' : ''}" id="content${i}" role="tabpanel" aria-labelledby="${i}-tab" style="padding: 15px">
						<div class="card shadow mb-4">

							<div class="card-header py-3 d-flex flex-row align-items-center justify-content-between rounded-top-4">
								<div>
									<h6 class="m-0">${group.name}</h6>
									<h10>Description:</h10>
									${group.description} <br>
									<h10>Role:</h10>
									${role.name} <br>
									<h10>Group members:</h10>
									${membersText} <br>
								</div>

								<!-- Dropdown action button -->
								<div class="dropdown no-arrow">
									<a class="btn btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink"
									   data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
										<i class="fas fa-ellipsis-v"></i>
									</a>

									<div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuLink">
										<h6 class="dropdown-header">Action</h6>
										<a class="dropdown-item" href="#" data-toggle="modal" data-target="#inviteModal-${group.id}">
											Add member
										</a>
										<a class="dropdown-item" href="#" data-toggle="modal" data-target="#leaveGroup-${result[i].id}">
											Leave group
										</a>
										${result[i].roleId == 1
											? `<div class="dropdown-divider"></div>
											   <a class="dropdown-item text-danger" href="#" data-toggle="modal" data-target="#deleteModal-${group.id}">Delete group</a>`
											: ''}
									</div>
								</div>
							</div>

								<!-- Invite Modal -->
								<div class="modal fade" id="inviteModal-${group.id}" tabindex="-1" role="dialog" aria-labelledby="inviteModalLabel" aria-hidden="true">
								  <div class="modal-dialog" role="document">
									<div class="modal-content rounded-4 shadow">
									  <div class="modal-header">
										<h5 class="modal-title" id="inviteModalLabel">Send Invite</h5>
										<button type="button" class="close" data-dismiss="modal" aria-label="Close">
										  <span aria-hidden="true">&times;</span>
										</button>
									  </div>

									  <div class="modal-body">
										<form id="invite-form-${group.id}" class="invite-form">
										  <div class="mb-3">
											<h6 class="result-message"></h6>
											<label for="username-input-${group.id}" class="form-label">Username</label>
											<input type="text" class="form-control username-input" id="username-input-${group.id}" name="username-input" required>
										  </div>
										</form>
									  </div>

									  <div class="modal-footer">
										<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
										<button type="submit" form="invite-form-${group.id}" class="btn btn-primary">Send Invite</button>
									  </div>
									</div>
								  </div>
								</div>

								<!-- Leave Group Modal -->
								<div class="modal fade" id="leaveGroup-${result[i].id}" tabindex="-1" role="dialog" aria-labelledby="leaveGroupModalLabel" aria-hidden="true">
								  <div class="modal-dialog" role="document">
									<div class="modal-content rounded-4 shadow">
									  <div class="modal-header bg-danger text-white">
										<h5 class="modal-title" id="leaveGroupModalLabel">Leave group</h5>
										<button type="button" class="close" data-dismiss="modal" aria-label="Close">
										  <span aria-hidden="true">&times;</span>
										</button>
									  </div>

									  <div class="modal-body">
										<form id="leave-form-${result[i].id}" action="/api/GroupMembership/${result[i].id}" method="DELETE">
											<h5>Are you sure you want to quit this group?</h5>
										</form>
									  </div>

									  <div class="modal-footer">
										<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
										<button type="button" class="btn btn-danger leave-btn" data-id="${result[i].id}">Leave</button>
									  </div>
									</div>
								  </div>
								</div>

								</div>
								<div class="card-body">
									<div class="card mb-3" style="padding: 5px;">
									  <div class="card-body">
										<h5 class="card-title">Group Activity</h5>
											<div class="row" style="padding: 5px">
												<div class="col">
													<div class="input-card income-card group-card">
														<div class="card border-left-success shadow h-100 py-2">
															<div class="card-body">
																<div class="row no-gutters align-items-center">
																	<div class="col mr-2">
																		<div class="text-xs font-weight-bold text-success text-uppercase mb-1">
																			INCOME
																		</div>
																		<div class="h5 mb-0 font-weight-bold text-gray-400">New Income Entry</div>
																	</div>
																	<div class="col-auto">
																		<i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
																	</div>

																	<div class="col-auto" style="margin-left: 10px">
																		<button class="add-btn btn btn-success" id="add-income-btn">Add</button>
																	</div>
																</div>

																<div id="income-input-div" class="input-container" style="display: none; margin-top: 13px">
																	<table style="padding: 3px">
																		<tr>
																			<td><label for="income-amount-input-field">Amount:</label></td>
																			<td><input class="input-amount" id="income-amount-input-field" name="income-amount-input-field" type="number" required/></td>
																		</tr>
																		<tr>
																			<td><label for="income-desc-input-field">Description:</label></td>
																			<td><input class="input-desc" id="income-desc-input-field" name="income-desc-input-field" type="text" required/></td>
																		</tr>
																	</table>

																	<div class="categoryIncomeDropdownContainer"></div>

																	<input type="hidden" name="group-id" id="group-id" class="input-group" value="${group.id}" />

																	<button class="btn save-btn">SAVE</button>
																	<button class="btn cancel-btn">CANCEL</button>
																</div>
															</div>
														</div>
													</div>
												</div>
												<div class="col">
													<div class="input-card expense-card group-card">
														<div class="card border-left-info shadow h-100 py-2">
															<div class="card-body">
																<div class="row no-gutters align-items-center">
																	<div class="col mr-2">
																		<div class="text-xs font-weight-bold text-info text-uppercase mb-1">
																			EXPENSE
																		</div>
																		<div class="h5 mb-0 font-weight-bold text-gray-400">New Expense Entry</div>
																	</div>
																	<div class="col-auto">
																		<i class="fas fa-clipboard-list fa-2x text-gray-300"></i>
																	</div>

																	<div class="col-auto" style="margin-left: 10px">
																		<button class="add-btn btn btn-info" id="add-expense-btn">Add</button>
																	</div>
																</div>

																<div id="expense-input-div" class="input-container" style="display: none; margin-top: 13px">
																	<table style="padding: 3px">
																		<tr>
																			<td><label for="expense-amount-input-field">Amount:</label></td>
																			<td><input class="input-amount" id="expense-amount-input-field" name="expense-amount-input-field" type="number" required/></td>
																		</tr>
																		<tr>
																			<td><label for="expense-desc-input-field">Description:</label></td>
																			<td><input class="input-desc" id="expense-desc-input-field" name="expense-desc-input-field" type="text" required/></td>
																		</tr>
																	</table>

																	<div class="categoryExpenseDropdownContainer"></div>

																	<input type="hidden" name="group-id" id="group-id" class="input-group" value="${group.id}" />

																	<button class="btn save-btn">SAVE</button>
																	<button class="btn cancel-btn">CANCEL</button>
																</div>
															</div>
														</div>
													</div>
												</div>
											</div>

											<div class="row justify-content-center">
												<div class="col-lg-10" style="padding: 5px">
													<div class="card border-2 rounded-4 shadow-sm" style="border-color: #36b9cc;">
														<div class="card-header text-white rounded-top-4" style="background: linear-gradient(135deg, #4e73df, #1cc88a);">
															<h5 class="mb-2 fw-bold text-center">Transactions Table</h5>
															
														</div>

														<div class="card-body bg-white rounded-bottom-4">
															<div class="table-responsive">
																<table id="finance-table-${group.id}" class="table table-hover align-middle">
																	<thead class="table-primary">
																		<tr>
																			<th>User</th>
																			<th>Type</th>
																			<th>Category</th>
																			<th>Description</th>
																			<th>Amount</th>
																			<th>Date</th>
																		</tr>
																	</thead>
																	<tbody>
																		<!-- Dynamic rows go here -->
																	</tbody>
																	<tfoot class="table-light">
																		<tr>
																			<th>User</th>
																			<th>Type</th>
																			<th>Category</th>
																			<th>Description</th>
																			<th>Amount</th>
																			<th>Date</th>
																		</tr>
																	</tfoot>
																</table>
															</div>
														</div>
													</div>
												</div>
											</div>

											<div class="row savings" style="margin: 15px">
														<div class="card shadow mb-4">
												<div class="card-header py-3 d-flex justify-content-between align-items-center gradient-bg">
													<div>
														<h4 class="m-0 font-weight-bold text-secondary">Savings Tab</h4>
														<h6 class="m-0 font-weight-bold text-secondary">On this tab you can organize your group savings. Either saving for a specific goal, or just trying to have backup money, you can organize everything here!</h6>
													</div>
													<button type="button" id="add-button" class="btn btn-dark btn-sm" data-toggle="modal" data-target="#savingsModal-${group.id}">
														Add new saving goal
													</button>


												</div>
												<div class="card-body savings-cards-container group-savings-card-container" id="${group.id}" style="display: flex; flex-wrap: wrap; padding: 10px;"></div>
												</div>

												<!-- Modal -->
												<div class="modal fade" id="savingsModal-${group.id}" tabindex="-1" role="dialog" aria-labelledby="savingsModalLabel" aria-hidden="true">
													<div class="modal-dialog modal-dialog-centered" role="document">
														<div class="modal-content rounded-3 shadow">

															<div class="modal-header bg-primary text-white">
																<h5 class="modal-title" id="savingsModalLabel">Create a Savings Goal</h5>
																<button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
																	<span aria-hidden="true">&times;</span>
																</button>
															</div>

															<div class="modal-body">
																<form id="savings-form" action="/api/Saving" method="POST">
																	<div class="form-group" style="display: none">
																		<label for="GroupId">Group Id</label>
																		<input type="hidden" class="form-control" id="GroupId" name="GroupId" value="${group.id}" />
																	</div>
																	<div class="form-group">
																		<label for="Title">Title</label>
																		<input type="text" class="form-control" id="Title" name="Title" required />
																	</div>
																	<div class="form-group">
																		<label for="Description">Description</label>
																		<input type="text" class="form-control" id="Description" name="Description" required />
																	</div>
																	<div class="form-group">
																		<label for="GoalAmount">Goal Amount (Optional)</label>
																		<input type="number" class="form-control" id="GoalAmount" name="GoalAmount" />
																	</div>
																	<div class="form-group">
																		<label for="Deadline">Deadline (Optional)</label>
																		<input type="date" class="form-control" id="Deadline" name="Deadline" />
																	</div>
																	<button type="submit" class="btn btn-success">Save</button>
																</form>

															</div>

															<div class="modal-footer">
																<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
															</div>

														</div>
													</div>
												</div>

														<!-- Group Deletion Modal -->
												<div class="modal fade" id="deleteModal-${group.id}" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
													<div class="modal-dialog" role="document">
														<div class="modal-content rounded-4 shadow">
															<div class="modal-header">
																<h5 class="modal-title" id="deleteModalLabel">Warning!</h5>
																<button type="button" class="close" data-dismiss="modal" aria-label="Close">
																	<span aria-hidden="true">&times;</span>
																</button>
															</div>

															<div class="modal-body">
																<form id="delete-form-${group.id}" class="delete-form">
																	<div class="mb-3">
																		<h6 class="result-message"></h6>

																	</div>
																</form>
																<h5 class="text-danger">
																	Are you sure you want to delete the group? This
																	action can not be undone!
																</h5>
															</div>

															<div class="modal-footer">
																<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
																<button type="submit" form="delete-form-${group.id}" class="btn btn-danger">Delete</button>
															</div>
														</div>
													</div>
												</div>
												
												
											</div>
										<p class="card-text"><small class="text-muted">Created: ${group.createdAt}</small></p>
									  </div>
									</div>
								</div>
							</div>
					</div>
					`;
			
				}
			}
		}

	});

</script>